<domain type='kvm'>
  <name>{{ vm_config.vm_name }}</name>
  <memory unit='KiB'>{{ (vm_config.vm_memory | default(default_vm_memory)) * 1024 }}</memory>
  <currentMemory unit='KiB'>{{ (vm_config.vm_memory | default(default_vm_memory)) * 1024 }}</currentMemory>
  <vcpu placement='static'>{{ vm_config.vm_vcpus | default(default_vm_vcpus) }}</vcpu>
  
  <os>
    <type arch='x86_64' machine='pc-q35-6.2'>hvm</type>
    <boot dev='hd'/>
  </os>
  
  <features>
    <acpi/>
    <apic/>
    <vmport state='off'/>
  </features>
  
  <cpu mode='host-passthrough' check='none' migratable='on'/>
  
  <clock offset='utc'>
    <timer name='rtc' tickpolicy='catchup'/>
    <timer name='pit' tickpolicy='delay'/>
    <timer name='hpet' present='no'/>
  </clock>

  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>destroy</on_crash>

  <pm>
    <suspend-to-mem enabled='no'/>
    <suspend-to-disk enabled='no'/>
  </pm>

{% if vm_config.shared_folders is defined and vm_config.shared_folders | length > 0 %}
  <!-- Shared memory for virtiofs -->
  <memoryBacking>
    <source type='memfd'/>
    <access mode='shared'/>
  </memoryBacking>
{% endif %}
  
  <devices>
    <emulator>/usr/bin/qemu-system-x86_64</emulator>
    
    <!-- Disk -->
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='{{ base_image_path }}/{{ vm_config.vm_name }}.qcow2'/>
      <target dev='vda' bus='virtio'/>
      <address type='pci' domain='0x0000' bus='0x04' slot='0x00' function='0x0'/>
    </disk>
    
    <!-- Cloud-init ISO -->
    <disk type='file' device='cdrom'>
      <driver name='qemu' type='raw'/>
      <source file='{{ base_image_path }}/{{ vm_config.vm_name }}-cloud-init.iso'/>
      <target dev='sda' bus='sata'/>
      <readonly/>
      <address type='drive' controller='0' bus='0' target='0' unit='0'/>
    </disk>
    
    <!-- SATA Controller for CD-ROM -->
    <controller type='sata' index='0'>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x1f' function='0x2'/>
    </controller>
    
    <!-- Network Interface -->
{% if vm_config.vm_bridge is defined %}
    <interface type='bridge'>
      <source bridge='{{ vm_config.vm_bridge }}'/>
      <model type='virtio'/>
{% if vm_config.vm_mac_address is defined %}
      <mac address='{{ vm_config.vm_mac_address }}'/>
{% endif %}
      <address type='pci' domain='0x0000' bus='0x01' slot='0x00' function='0x0'/>
    </interface>
{% else %}
    <interface type='network'>
      <source network='{{ vm_config.vm_network | default(default_vm_network) }}'/>
      <model type='virtio'/>
{% if vm_config.vm_mac_address is defined %}
      <mac address='{{ vm_config.vm_mac_address }}'/>
{% endif %}
      <address type='pci' domain='0x0000' bus='0x01' slot='0x00' function='0x0'/>
    </interface>
{% endif %}

    <!-- Console -->
    <console type='pty'>
      <target type='serial' port='0'/>
    </console>
    
    <!-- VNC -->
    <graphics type='vnc' port='-1' autoport='yes' listen='127.0.0.1'>
      <listen type='address' address='127.0.0.1'/>
    </graphics>
    
    <!-- SPICE (alternative to VNC) -->
    <graphics type='spice' autoport='yes' listen='127.0.0.1'>
      <listen type='address' address='127.0.0.1'/>
      <image compression='off'/>
    </graphics>
    
    <!-- Video -->
{% if vm_config.gpu_passthrough | default(false) %}
    <!-- GPU Passthrough -->
    <hostdev mode='subsystem' type='pci' managed='yes'>
      <source>
        <address domain='0x{{ vm_config.gpu_device_id.split(":")[0] }}' 
                 bus='0x{{ vm_config.gpu_device_id.split(":")[1] }}' 
                 slot='0x{{ vm_config.gpu_device_id.split(":")[2].split(".")[0] }}' 
                 function='0x{{ vm_config.gpu_device_id.split(":")[2].split(".")[1] }}'/>
      </source>
      <address type='pci' domain='0x0000' bus='0x02' slot='0x00' function='0x0'/>
    </hostdev>
{% else %}
    <video>
      <model type='virtio' heads='1' primary='yes'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x01' function='0x0'/>
    </video>
{% endif %}
    
    <!-- Memory Balloon -->
    <memballoon model='virtio'>
      <address type='pci' domain='0x0000' bus='0x05' slot='0x00' function='0x0'/>
    </memballoon>
    
    <!-- RNG -->
    <rng model='virtio'>
      <backend model='random'>/dev/urandom</backend>
      <address type='pci' domain='0x0000' bus='0x06' slot='0x00' function='0x0'/>
    </rng>

{% if vm_config.shared_folders is defined and vm_config.shared_folders | length > 0 %}
    <!-- Shared folders (virtiofs) -->
{% for folder in vm_config.shared_folders %}
    <filesystem type='mount' accessmode='passthrough'>
      <driver type='virtiofs'/>
      <source dir='{{ folder.source }}'/>
      <target dir='{{ folder.tag }}'/>
    </filesystem>
{% endfor %}
{% endif %}
  </devices>
</domain>
